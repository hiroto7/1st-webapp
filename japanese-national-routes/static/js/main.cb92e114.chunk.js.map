{"version":3,"sources":["Arrow.js","NoticeBox.js","App.js","serviceWorker.js","index.js"],"names":["Arrow","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","animationFrame","state","value","_this2","requestAnimationFrame","callback","time","Math","floor","ceil","length","setState","cancelAnimationFrame","parts","i","push","react_default","a","createElement","style","color","letterSpacing","userSelect","React","Component","NoticeBox","className","data-type","notice","type","message","App","currentRouteNumber","others","current","notices","routeNumber","endpoint","query","concat","toConsumableArray","fetch","encodeURIComponent","headers","Accept","response","text","json","JSON","parse","starts","Set","ends","startLabels","endLabels","_iterator","results","bindings","Symbol","iterator","_iteratorNormalCompletion","_step","next","done","undefined","binding","routeStart","add","routeEnd","routeStartLabel","routeEndLabel","size","Error","number","query2","map","point","join","response2","text2","json2","Map","route","get","set","values","_context","t2","toString","margin","fontSize","fontWeight","autoFocus","min","max","onChange","e","changeRouteTo","target","src_NoticeBox","display","justifyContent","alignItems","textAlign","str","Arrow_Arrow","other","onClick","some","start","has","end","textDecoration","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cb92e114.chunk.js","sourcesContent":["// @ts-check\nimport React from 'react';\n\n/** @extends {React.Component<{ length: number }, { value: number }>} */\nexport default class Arrow extends React.Component {\n    /** @type {number | null} */\n    animationFrame = null;\n\n    /** @param {{ length: number }} props */\n    constructor(props) {\n        super(props);\n        this.state = { value: 0 };\n    }\n\n    componentDidMount() {\n        /** @param {number} time */\n        const callback = time => {\n            const value = Math.floor(time / 250) % Math.ceil(this.props.length + 1);\n            if (this.state.value !== value) {\n                this.setState({ value });\n            }\n            this.animationFrame = requestAnimationFrame(callback);\n        };\n        this.animationFrame = requestAnimationFrame(callback);\n    }\n\n    componentWillUnmount() {\n        if (this.animationFrame !== null) {\n            cancelAnimationFrame(this.animationFrame);\n        }\n    }\n\n    render() {\n        const parts = [];\n        for (let i = 0; i < this.props.length; i++) {\n            parts.push(<span style={{ color: i < this.state.value ? 'white' : 'rgba(255, 255, 255, .5)' }}>&gt;</span>)\n        }\n        return (<div style={{ letterSpacing: '-.25em', userSelect: 'none' }}>{parts}</div >)\n    }\n}","// @ts-check\nimport React from 'react';\nimport './Notice.css';\n\n/** @typedef {{ type: 'info' | 'warn' | 'error', message: string }} Notice */\n\n/** @param {{ notice: Notice }} props */\nconst NoticeBox = props => (<div className=\"notice\" data-type={props.notice.type}>{props.notice.message}</div>);\n\nexport default NoticeBox;\n","// @ts-check\nimport React from 'react';\nimport './App.css';\nimport Arrow from './Arrow';\nimport NoticeBox from './NoticeBox';\n\n/** @typedef {{ number: number; starts: Set<string>; ends: Set<string>; length: number | null }} Route */\n/** @typedef {import('./NoticeBox').Notice} Notice */\n/** @typedef {{ results: { bindings: [{ routeStart?: { value: string }, routeStartLabel?: { value: string }, routeEnd?: { value: string }, routeEndLabel?: { value: string }, length?: { value: string }, routeNumber?: { value: string } }] } }} JSON1 */\n\n/** @extends {React.Component<{}, { current: Route | null, others: Route[], currentRouteNumber: number | '', notices: Notice[] }>} */\nclass App extends React.Component {\n  /** @type {{ current: Route | null, others: Route[], currentRouteNumber: number | '', notices: Notice[] }} */\n  state = { currentRouteNumber: '', others: [], current: null, notices: [] };\n\n  /** @param {number} routeNumber */\n  async changeRouteTo(routeNumber) {\n    /** @type {Notice[]} */\n    let notices = [];\n\n    try {\n      const endpoint = 'http://www.ohsuga.is.uec.ac.jp/sparql';\n      const query = `PREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX dbpedia-ja: <http://ja.dbpedia.org/resource/>\nPREFIX dbpedia-owl: <http://dbpedia.org/ontology/>\n\nselect distinct * where {\n  optional {\n    dbpedia-ja:国道${routeNumber}号 dbpedia-owl:routeStart ?routeStart .\n    ?routeStart rdfs:label ?routeStartLabel.\n  }\n  optional {\n    dbpedia-ja:国道${routeNumber}号 dbpedia-owl:routeEnd ?routeEnd .\n    ?routeEnd rdfs:label ?routeEndLabel .\n  }\n  optional {\n    dbpedia-ja:国道${routeNumber}号 dbpedia-owl:length ?length .\n  }\n}\n`;\n\n      this.setState({\n        current: null,\n        others: [],\n        currentRouteNumber: routeNumber,\n        notices: [...notices, { message: `'国道${routeNumber}号' を問い合わせ中...`, type: 'info' }]\n      })\n\n      const response = await fetch(`${endpoint}?query=${encodeURIComponent(query)}`, { headers: { Accept: 'application/sparql-results+json' } });\n      const text = await response.text();\n      /** @type {JSON1} */\n      const json = JSON.parse(text);\n\n      /** @type {Set<string>} */\n      const starts = new Set();\n      /** @type {Set<string>} */\n      const ends = new Set();\n      /** @type {Set<string>} */\n      const startLabels = new Set();\n      /** @type {Set<string>} */\n      const endLabels = new Set();\n      /** @type {number | null} */\n      let length = null;\n\n      for (const binding of json.results.bindings) {\n        if (binding.routeStart !== undefined)\n          starts.add(binding.routeStart.value);\n\n        if (binding.routeEnd !== undefined)\n          ends.add(binding.routeEnd.value);\n\n        if (binding.routeStartLabel !== undefined)\n          startLabels.add(binding.routeStartLabel.value);\n\n        if (binding.routeEndLabel !== undefined)\n          endLabels.add(binding.routeEndLabel.value);\n\n        if (binding.length !== undefined) length = +binding.length.value;\n      }\n\n      if (startLabels.size < 1 && endLabels.size < 1 && length === null)\n        throw new Error(`'国道${routeNumber}号' を取得できません。`)\n\n      if (startLabels.size < 1 || endLabels.size < 1 || length === null)\n        notices = [...notices, {\n          message: `'国道${routeNumber}号' の${\n            startLabels.size < 1 ?\n              endLabels.size < 1 ?\n                '起終点' :\n                length === null ?\n                  '起点と長さ' :\n                  '起点' :\n              endLabels.size < 1 ?\n                length === null ?\n                  '終点と長さ' :\n                  '終点' :\n                '長さ'\n            }を取得できません。`,\n          type: 'warn'\n        }];\n\n      if (routeNumber !== this.state.currentRouteNumber)\n        return;\n\n      this.setState({\n        current: { number: routeNumber, starts: startLabels, ends: endLabels, length },\n        notices: [...notices, { message: `'国道${routeNumber}号' に起終点が一致する国道を問い合わせ中...`, type: 'info' }]\n      });\n\n      const query2 = `PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX dbpedia-ja: <http://ja.dbpedia.org/resource/>\nPREFIX dbpedia-owl: <http://dbpedia.org/ontology/>\nPREFIX category-ja: <http://ja.dbpedia.org/resource/Category:>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#> \n\nselect distinct * where {\n  ?route dcterms:subject category-ja:一般国道 ;\n    rdfs:label ?routeLabel .\n  optional {\n    ?route dbpedia-owl:routeStart ?routeStart .\n  }\n  optional {\n    ?route dbpedia-owl:routeEnd ?routeEnd .\n  }\n  optional {\n    ?route dbpedia-owl:length ?length .\n  }\n  ${[...new Set([...starts, ...ends])].map(point => `{\n    ?route dbpedia-owl:routeStart <${point}> .\n  } union {\n    ?route dbpedia-owl:routeEnd <${point}> .\n  }`).join(' union ')}\n  ?routeStart rdfs:label ?routeStartLabel .\n  ?routeEnd rdfs:label ?routeEndLabel .\n  filter(regex(?routeLabel, \"^国道[0-9]号$|^国道[0-9][0-9]号$|^国道[0-9][0-9][0-9]号$\")) .\n  bind(xsd:integer(replace(replace(?routeLabel, \"国道\", \"\"), \"号\", \"\")) as ?routeNumber) .\n} order by ?routeNumber`;\n\n      const response2 = await fetch(`${endpoint}?query=${encodeURIComponent(query2)}`, { headers: { Accept: 'application/sparql-results+json' } });\n      const text2 = await response2.text();\n      /** @type {JSON1} */\n      const json2 = JSON.parse(text2);\n\n      /** @type {Map<number, Route>} */\n      const map = new Map();\n\n      for (const binding of json2.results.bindings) {\n        if (binding.routeNumber === undefined)\n          throw new Error();\n\n        if (+binding.routeNumber.value === routeNumber)\n          continue;\n\n        const route = map.get(+binding.routeNumber.value) ||\n          { number: +binding.routeNumber.value, starts: new Set(), ends: new Set(), length: null };\n        map.set(+binding.routeNumber.value, route);\n\n        if (binding.routeStartLabel !== undefined)\n          route.starts.add(binding.routeStartLabel.value);\n\n        if (binding.routeEndLabel !== undefined)\n          route.ends.add(binding.routeEndLabel.value);\n\n        if (binding.length !== undefined)\n          route.length = +binding.length.value;\n      }\n\n      this.setState({ others: [...map.values()], notices });\n    } catch (e) {\n      if (routeNumber === this.state.currentRouteNumber)\n        this.setState({\n          notices: [...notices, { type: 'error', message: e.toString() }]\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div style={{ margin: '64px 0', fontSize: '2em', fontWeight: 'bold' }}>\n          国道\n          <input type=\"number\" autoFocus min={1} max={999} value={this.state.currentRouteNumber}\n            onChange={e => this.changeRouteTo(+e.target.value)}></input>\n          号\n        </div>\n        <ul>{this.state.notices.map(notice => (<li><NoticeBox notice={notice} /></li>))}</ul>\n        {\n          this.state.current === null ? '' : (\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', fontSize: '2em' }}>\n              <div style={{ textAlign: 'right' }}>{\n                this.state.current.starts.size < 1 ? '?' : (\n                  <ul>{[...this.state.current.starts].map(str => (<li>{str}</li>))}</ul>\n                )\n              }</div>\n              <div style={{ margin: '0 1em' }}>{\n                this.state.current.length === null ? (\n                  <div>-&gt;</div>\n                ) : (\n                    <div>\n                      <div>{\n                        this.state.current.length < 1000 ?\n                          `${this.state.current.length}m` :\n                          `${this.state.current.length / 1000}km`\n                      }</div>\n                      <div>\n                        <Arrow length={this.state.current.length / 20000} />\n                      </div>\n                    </div>\n                  )\n              }</div>\n              <div style={{ textAlign: 'left' }}>{\n                this.state.current.ends.size < 1 ? '?' : (\n                  <ul>{[...this.state.current.ends].map(str => (<li>{str}</li>))}</ul>\n                )\n              }</div>\n            </div>\n          )\n        }\n        {\n          this.state.others === null || this.state.others.length < 1 ? '' :\n            <table style={{ margin: '64px auto' }}>\n              <caption style={{ fontWeight: 'bold' }}>起終点が一致する国道</caption>\n              <tbody>\n                {this.state.others.map(other => (\n                  <tr onClick={() => this.changeRouteTo(other.number)} style={{\n                    color: (\n                      [...other.starts].some(start => this.state.current !== null && this.state.current.starts.has(start)) &&\n                      [...other.ends].some(end => this.state.current !== null && this.state.current.ends.has(end))\n                    ) || (\n                        [...other.starts].some(start => this.state.current !== null && this.state.current.ends.has(start)) &&\n                        [...other.ends].some(end => this.state.current !== null && this.state.current.starts.has(end))\n                      ) ? 'lightgreen' : 'inherit'\n                  }}>\n                    <td style={{ textAlign: 'left', fontWeight: 'bold' }}>国道{other.number}号</td>\n                    <td style={{ textAlign: 'right' }}>{\n                      other.starts.size < 1 ? '?' : (\n                        <ul>{[...other.starts].map(start => (<li style={{\n                          textDecoration:\n                            this.state.current !== null && (this.state.current.starts.has(start) || this.state.current.ends.has(start)) ?\n                              'underline' : 'none'\n                        }}>{start}</li>))}</ul>\n                      )\n                    }</td>\n                    <td style={{ color: 'rgba(255, 255, 255, .5)' }}>-&gt;</td>\n                    <td style={{ textAlign: 'left' }}>{\n                      other.ends.size < 1 ? '?' : (\n                        <ul>{[...other.ends].map(end => (<li style={{\n                          textDecoration:\n                            this.state.current !== null && (this.state.current.starts.has(end) || this.state.current.ends.has(end)) ?\n                              'underline' : 'none'\n                        }}>{end}</li>))}</ul>\n                      )\n                    }</td>\n                    <td style={{ textAlign: 'right' }}>{\n                      other.length === null ? '-' : other.length < 1000 ?\n                        `${other.length}m` :\n                        `${other.length / 1000}km`\n                    }</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}